{"ast":null,"code":"var _jsxFileName = \"/Users/alex/projects/task_timer/src/components/DeleteTaskButton.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from \"react-redux\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { deleteTask } from \"../redux/actions\";\n\nfunction DeleteTaskButton({\n  deleteTask,\n  id\n}) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleClickOpen,\n    startIcon: React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Delete\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Are you sure?\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"After deleting your task will not be saved\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Disagree\"), React.createElement(Button, {\n    onClick: () => {\n      handleClose();\n      deleteTask(id);\n    },\n    color: \"primary\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Agree\"))));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTask: id => dispatch(deleteTask(id))\n});\n\nexport default connect(null, mapDispatchToProps)(DeleteTaskButton);","map":{"version":3,"sources":["/Users/alex/projects/task_timer/src/components/DeleteTaskButton.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","connect","DeleteIcon","deleteTask","DeleteTaskButton","id","open","setOpen","useState","handleClickOpen","handleClose","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,gBAAT,CAA0B;AAAED,EAAAA,UAAF;AAAcE,EAAAA;AAAd,CAA1B,EAA8C;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACc,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,OAAO,EAAEE,eAHX;AAIE,IAAA,SAAS,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EASE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,OAAO,EAAEI,WAFX;AAGE,uBAAgB,oBAHlB;AAIE,wBAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,eADH,CANF,EASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,CATF,EAcE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AACE,IAAA,OAAO,EACL,MAAM;AACJA,MAAAA,WAAW;AACXP,MAAAA,UAAU,CAACE,EAAD,CAAV;AACD,KALL;AAOE,IAAA,KAAK,EAAC,SAPR;AAQE,IAAA,SAAS,MARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAdF,CATF,CADF;AA4CD;;AAED,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtCT,EAAAA,UAAU,EAAEE,EAAE,IAAIO,QAAQ,CAACT,UAAU,CAACE,EAAD,CAAX;AADY,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCP,gBAAlC,CAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from \"react-redux\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { deleteTask } from \"../redux/actions\";\n\nfunction DeleteTaskButton({ deleteTask, id }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <div>\n      <Button \n        variant=\"contained\" \n        color=\"secondary\" \n        onClick={handleClickOpen}\n        startIcon={<DeleteIcon />}\n      >\n        Delete\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            After deleting your task will not be saved\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button \n            onClick={\n              () => {\n                handleClose();\n                deleteTask(id);\n              }\n            }  \n            color=\"primary\"  \n            autoFocus\n          >\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTask: id => dispatch(deleteTask(id))\n});\n\nexport default connect(null, mapDispatchToProps)(DeleteTaskButton);"]},"metadata":{},"sourceType":"module"}
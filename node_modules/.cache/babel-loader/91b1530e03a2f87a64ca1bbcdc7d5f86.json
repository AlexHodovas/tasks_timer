{"ast":null,"code":"import { ADD_TASK, DELETE_TASK, DELETE_ALL_TASKS } from \"../actions\";\n\nconst tasksReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return [...state, {\n        id: action.task.id,\n        taskName: action.task.taskName,\n        startTime: action.task.startTime,\n        endTime: action.task.endTime,\n        taskDuration: action.task.taskDuration,\n        taskColor: action.task.taskColor\n      }];\n\n    case DELETE_TASK:\n      return state.filter(task => task.id !== action.id);\n\n    case DELETE_ALL_TASKS:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;","map":{"version":3,"sources":["/Users/alex/projects/task_timer/src/redux/reducers/tasksReducer.js"],"names":["ADD_TASK","DELETE_TASK","DELETE_ALL_TASKS","tasksReducer","state","action","type","id","task","taskName","startTime","endTime","taskDuration","taskColor","filter"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,gBAAhC,QAAwD,YAAxD;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,QAAL;AACE,aAAO,CACL,GAAGI,KADE,EAEL;AACEG,QAAAA,EAAE,EAAEF,MAAM,CAACG,IAAP,CAAYD,EADlB;AAEEE,QAAAA,QAAQ,EAAEJ,MAAM,CAACG,IAAP,CAAYC,QAFxB;AAGEC,QAAAA,SAAS,EAAEL,MAAM,CAACG,IAAP,CAAYE,SAHzB;AAIEC,QAAAA,OAAO,EAAEN,MAAM,CAACG,IAAP,CAAYG,OAJvB;AAKEC,QAAAA,YAAY,EAAEP,MAAM,CAACG,IAAP,CAAYI,YAL5B;AAMEC,QAAAA,SAAS,EAAER,MAAM,CAACG,IAAP,CAAYK;AANzB,OAFK,CAAP;;AAYF,SAAKZ,WAAL;AACE,aAAOG,KAAK,CAACU,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACD,EAAL,KAAYF,MAAM,CAACE,EAAxC,CAAP;;AAEF,SAAKL,gBAAL;AACE,aAAO,EAAP;;AAEF;AACE,aAAOE,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,YAAf","sourcesContent":["import { ADD_TASK, DELETE_TASK, DELETE_ALL_TASKS } from \"../actions\";\n\nconst tasksReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return [\n        ...state,\n        {\n          id: action.task.id,\n          taskName: action.task.taskName,\n          startTime: action.task.startTime,\n          endTime: action.task.endTime,\n          taskDuration: action.task.taskDuration,\n          taskColor: action.task.taskColor\n        }\n      ];\n\n    case DELETE_TASK:\n      return state.filter(task => task.id !== action.id);\n\n    case DELETE_ALL_TASKS:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;\n"]},"metadata":{},"sourceType":"module"}
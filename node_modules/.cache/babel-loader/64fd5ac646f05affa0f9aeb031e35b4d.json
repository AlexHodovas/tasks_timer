{"ast":null,"code":"var _jsxFileName = \"/Users/alex/projects/tasks_timer/src/components/TaskInfo.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { getTasks } from \"../redux/store\";\nimport ErrorModalWindow from \"./ErrorModalWindow\";\nconst StyledTableContainer = withStyles(theme => ({\n  root: {\n    minWidth: 700,\n    width: \"90%\",\n    margin: \"50px auto\",\n    boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\"\n  }\n}))(TableContainer);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    backgroundColor: \"aliceblue\"\n  }\n}))(TableRow);\nconst StyledTableCell = withStyles(theme => ({\n  root: {\n    textAlign: \"center\"\n  }\n}))(TableCell);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nconst TaskInfo = ({\n  history,\n  tasks\n}) => {\n  const classes = useStyles();\n  let selectedId = +history.location.pathname.split(\":\")[1];\n  let selectedTask = tasks.find(task => task.id === selectedId);\n\n  if (typeof selectedTask !== \"object\") {\n    return React.createElement(ErrorModalWindow, {\n      textError: \"task doesn't exist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n  const {\n    taskName,\n    startTime,\n    endTime,\n    taskDuration\n  } = selectedTask;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"linkBackWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/home/task-log\",\n    className: \"MuiButton-contained MuiButton-root MuiButtonBase-root\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Back\")), React.createElement(StyledTableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(StyledTableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"task text\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"timer value when start\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"timer value when stop\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"timer duration\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, taskName), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, startTime), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, endTime), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, taskDuration))))));\n};\n\nconst mapStateToProps = state => ({\n  tasks: getTasks(state)\n});\n\nexport default connect(mapStateToProps, null)(TaskInfo);","map":{"version":3,"sources":["/Users/alex/projects/tasks_timer/src/components/TaskInfo.js"],"names":["React","connect","Link","makeStyles","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","getTasks","ErrorModalWindow","StyledTableContainer","theme","root","minWidth","width","margin","boxShadow","StyledTableRow","backgroundColor","StyledTableCell","textAlign","useStyles","table","TaskInfo","history","tasks","classes","selectedId","location","pathname","split","selectedTask","find","task","id","taskName","startTime","endTime","taskDuration","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { getTasks } from \"../redux/store\";\nimport ErrorModalWindow from \"./ErrorModalWindow\";\n\nconst StyledTableContainer = withStyles(theme => ({\n  root: {\n    minWidth: 700,\n    width: \"90%\",\n    margin: \"50px auto\",\n    boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\"\n  }\n}))(TableContainer);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    backgroundColor: \"aliceblue\"\n  }\n}))(TableRow);\n\nconst StyledTableCell = withStyles(theme => ({\n  root: {\n    textAlign: \"center\"\n  }\n}))(TableCell);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nconst TaskInfo = ({ history, tasks }) => {\n  const classes = useStyles();\n  let selectedId = +history.location.pathname.split(\":\")[1];\n  let selectedTask = tasks.find(task => task.id === selectedId);\n\n  if (typeof selectedTask !== \"object\") {\n    return <ErrorModalWindow textError=\"task doesn't exist\" />;\n  }\n\n  const { taskName, startTime, endTime, taskDuration } = selectedTask;\n\n  return (\n    <>\n      <div className=\"linkBackWrapper\">\n        <Link\n          to=\"/home/task-log\"\n          className=\"MuiButton-contained MuiButton-root MuiButtonBase-root\"\n        >\n          Back\n        </Link>\n      </div>\n      <StyledTableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <StyledTableRow>\n              <StyledTableCell>task text</StyledTableCell>\n              <StyledTableCell align=\"right\">\n                timer value when start\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                timer value when stop\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">timer duration</StyledTableCell>\n            </StyledTableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {taskName}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{startTime}</StyledTableCell>\n              <StyledTableCell align=\"right\">{endTime}</StyledTableCell>\n              <StyledTableCell align=\"right\">{taskDuration}</StyledTableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </StyledTableContainer>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  tasks: getTasks(state)\n});\n\nexport default connect(mapStateToProps, null)(TaskInfo);\n"]},"metadata":{},"sourceType":"module"}